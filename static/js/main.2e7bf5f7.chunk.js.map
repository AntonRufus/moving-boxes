{"version":3,"sources":["components/MovingBoxes.jsx","components/useMovement.js","App.js","reportWebVitals.js","index.js","components/MovingBoxes.module.css"],"names":["MovingBoxes","canvasRef","useRef","linkDownRef","linkUpRef","linkRightRef","linkLeftRef","useState","x","setX","y","setY","direction","setDirection","useEffect","handleKeyDown","e","key","move","window","addEventListener","removeEventListener","dir","useMovement","context","current","getContext","canvas","width","innerWidth","height","innerHeight","theLinkRef","clearRect","drawImage","className","css","app","ref","arrows","onClick","images","src","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qMAIA,IAyEeA,EAzEK,WACZ,IAAMC,EAAYC,iBAAO,MACnBC,EAAcD,iBAAO,MACrBE,EAAYF,iBAAO,MACnBG,EAAeH,iBAAO,MACtBI,EAAcJ,iBAAO,MALT,ECFX,WAAwB,IAAD,EAChBK,mBAAS,GADO,mBAC3BC,EAD2B,KACxBC,EADwB,OAEhBF,mBAAS,GAFO,mBAE3BG,EAF2B,KAExBC,EAFwB,OAGAJ,mBAAS,QAHT,mBAG3BK,EAH2B,KAGhBC,EAHgB,KAMlCC,qBAAU,WACN,IAAMC,EAAgB,SAACC,GACL,YAAVA,EAAEC,KAAmBC,EAAK,MAChB,cAAVF,EAAEC,KAAqBC,EAAK,QAClB,cAAVF,EAAEC,KAAqBC,EAAK,QAClB,eAAVF,EAAEC,KAAsBC,EAAK,UAKrC,OAFAC,OAAOC,iBAAiB,UAAWL,GAE5B,kBAAMI,OAAOE,oBAAoB,UAAWN,MACpD,IAGH,IAAMG,EAAO,SAACI,GACVT,EAAaS,GACD,OAARA,GAAcX,GAAK,SAACD,GAAD,OAAOA,EAAI,MACtB,SAARY,GAAgBb,GAAK,SAACD,GAAD,OAAOA,EAAI,MACxB,SAARc,GAAgBX,GAAK,SAACD,GAAD,OAAOA,EAAI,MACxB,UAARY,GAAiBb,GAAK,SAACD,GAAD,OAAOA,EAAI,OAGzC,MAAO,CAACA,IAAGE,IAAGE,YAAWM,QDpBWK,GAAzBf,EANW,EAMXA,EAAGE,EANQ,EAMRA,EAAGE,EANK,EAMLA,UAAWM,EANN,EAMMA,KAyBxB,OAtBAJ,qBAAU,WACN,IAAMU,EAAUvB,EAAUwB,QAAQC,WAAW,MAC7CF,EAAQG,OAAOC,MAAQT,OAAOU,WAC9BL,EAAQG,OAAOG,OAASX,OAAOY,cAChC,IAGHjB,qBAAU,WACN,IAKIkB,EALER,EAAUvB,EAAUwB,QAAQC,WAAW,MAC7CF,EAAQS,UAAU,EAAG,EAAGd,OAAOY,YAAc,IAAWZ,OAAOY,YAAc,KAK3D,SAAdnB,IAAsBoB,EAAa7B,GACrB,OAAdS,IAAoBoB,EAAa5B,GACnB,SAAdQ,IAAsBoB,EAAa1B,GACrB,UAAdM,IAAuBoB,EAAa3B,GAExCmB,EAAQU,UAAUF,EAAWP,QAASjB,EAAGE,KAC1C,CAACF,EAAGE,IAGH,sBAAKyB,UAAWC,IAAIC,IAApB,UACI,wBAAQC,IAAKrC,IAEb,sBAAKkC,UAAWC,IAAIG,OAApB,UACI,wBAAQC,QAAS,kBAAMtB,EAAK,OAA5B,gBACA,wBAAQsB,QAAS,kBAAMtB,EAAK,SAA5B,kBACA,wBAAQsB,QAAS,kBAAMtB,EAAK,SAA5B,kBACA,wBAAQsB,QAAS,kBAAMtB,EAAK,UAA5B,sBAGJ,sBAAKiB,UAAWC,IAAIK,OAApB,UACI,qBACIH,IAAKnC,EAELuC,IAAI,kCACJC,IAAI,SAER,qBACIL,IAAKjC,EAELqC,IAAI,kCACJC,IAAI,UAER,qBACIL,IAAKlC,EAELsC,IAAI,kCACJC,IAAI,OAER,qBACIL,IAAKhC,EAELoC,IAAI,kCACJC,IAAI,gBEhEbC,EAFH,kBAAM,cAAC,EAAD,KCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,IAAM,yBAAyB,OAAS,4BAA4B,OAAS,+B","file":"static/js/main.2e7bf5f7.chunk.js","sourcesContent":["import React, {useEffect, useRef} from \"react\";\r\nimport css from \"./MovingBoxes.module.css\";\r\nimport useMovement from \"./useMovement\";\r\n\r\nconst MovingBoxes = () => {\r\n        const canvasRef = useRef(null);\r\n        const linkDownRef = useRef(null);\r\n        const linkUpRef = useRef(null);\r\n        const linkRightRef = useRef(null);\r\n        const linkLeftRef = useRef(null);\r\n        const {x, y, direction, move} = useMovement();\r\n\r\n        // set the height and with\r\n        useEffect(() => {\r\n            const context = canvasRef.current.getContext('2d');\r\n            context.canvas.width = window.innerWidth;\r\n            context.canvas.height = window.innerHeight;\r\n        }, []);\r\n\r\n        // move the box if x or y changes\r\n        useEffect(() => {\r\n            const context = canvasRef.current.getContext('2d');\r\n            context.clearRect(0, 0, window.innerHeight + 100000000, window.innerHeight + 10000000)\r\n            // context.clearRect(0, 0, window.innerHeight, window.innerHeight);\r\n            // context.fillRect(x, y, 100, 100);\r\n\r\n            let theLinkRef;\r\n            if (direction === 'down') theLinkRef = linkDownRef;\r\n            if (direction === 'up') theLinkRef = linkUpRef;\r\n            if (direction === 'left') theLinkRef = linkLeftRef;\r\n            if (direction === 'right') theLinkRef = linkRightRef;\r\n\r\n            context.drawImage(theLinkRef.current, x, y);\r\n        }, [x, y]);\r\n\r\n        return (\r\n            <div className={css.app}>\r\n                <canvas ref={canvasRef}/>\r\n\r\n                <div className={css.arrows}>\r\n                    <button onClick={() => move('up')}>Up</button>\r\n                    <button onClick={() => move('left')}>Left</button>\r\n                    <button onClick={() => move('down')}>Down</button>\r\n                    <button onClick={() => move('right')}>Right</button>\r\n                </div>\r\n\r\n                <div className={css.images}>\r\n                    <img\r\n                        ref={linkDownRef}\r\n                        // src=\"http://drapak.ca/cpg/img/link-down.png\"\r\n                        src=\"https://i.imgur.com/JYUB0m3.png\"\r\n                        alt=\"Down\"\r\n                    />\r\n                    <img\r\n                        ref={linkRightRef}\r\n                        // src=\"http://drapak.ca/cpg/img/link-right.png\"\r\n                        src=\"https://i.imgur.com/GEXD7bk.gif\"\r\n                        alt=\"Right\"\r\n                    />\r\n                    <img\r\n                        ref={linkUpRef}\r\n                        // src=\"http://drapak.ca/cpg/img/link-up.png\"\r\n                        src=\"https://i.imgur.com/XSA2Oom.gif\"\r\n                        alt=\"Up\"\r\n                    />\r\n                    <img\r\n                        ref={linkLeftRef}\r\n                        // src=\"http://drapak.ca/cpg/img/link-left.png\"\r\n                        src=\"https://i.imgur.com/4LGAZ8t.gif\"\r\n                        alt=\"Left\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n;\r\n\r\nexport default MovingBoxes;\r\n","import {useEffect, useState} from \"react\";\r\n\r\nexport default function useMovement() {\r\n    const [x, setX] = useState(0);\r\n    const [y, setY] = useState(0);\r\n    const [direction, setDirection] = useState('down');\r\n\r\n    // add event listener to window to listen arrow keys\r\n    useEffect(() => {\r\n        const handleKeyDown = (e) => {\r\n            if (e.key === 'ArrowUp') move('up');\r\n            if (e.key === 'ArrowLeft') move('left');\r\n            if (e.key === 'ArrowDown') move('down');\r\n            if (e.key === 'ArrowRight') move('right');\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => window.removeEventListener('keydown', handleKeyDown);\r\n    }, []);\r\n\r\n    // function for movements\r\n    const move = (dir) => {\r\n        setDirection(dir);\r\n        if (dir === 'up') setY((y) => y - 20);\r\n        if (dir === 'left') setX((x) => x - 20);\r\n        if (dir === 'down') setY((y) => y + 20);\r\n        if (dir === 'right') setX((x) => x + 20);\r\n    };\r\n\r\n    return {x, y, direction, move}\r\n}\r\n","import MovingBoxes from \"./components/MovingBoxes\";\nimport React from \"react\";\n\nconst App = () => <MovingBoxes/>\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"MovingBoxes_app__2YejU\",\"arrows\":\"MovingBoxes_arrows__3lpAN\",\"images\":\"MovingBoxes_images__ZyrHm\"};"],"sourceRoot":""}